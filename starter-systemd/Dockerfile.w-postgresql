### docker build --pull -t acme/starter-systemd:w-postgresql -f Dockerfile.w-postgresql .
FROM registry.access.redhat.com/rhel7-init
MAINTAINER Red Hat Systems Engineering <refarch-feedback@redhat.com>

### Atomic/OpenShift Labels - https://github.com/projectatomic/ContainerApplicationGenericLabels
LABEL name="acme/starter-systemd" \
      vendor="Acme Corp" \
      version="3.2" \
      release="1" \
### Required labels above - recommended below
      url="https://www.acme.io" \
      summary="Acme Corp's Starter app" \
      description="Starter app will do ....." \
      run='docker run -tdi --name ${NAME} \
      -p 8080:80 \
      ${IMAGE}' \
      io.k8s.description="Starter app will do ....." \
      io.k8s.display-name="Starter app" \
      io.openshift.expose-services="8080:http" \
      io.openshift.tags="acme,starter-systemd,starter,systemd"

### Atomic Help File - Write in Markdown, it will be converted to man format at build time.
### https://github.com/projectatomic/container-best-practices/blob/master/creating/help.adoc
COPY help.md /tmp/

RUN yum clean all && \
### Add necessary Red Hat repos here
    REPOLIST=rhel-7-server-rpms,rhel-7-server-optional-rpms \
### Add your package needs here
    INSTALL_PKGS="golang-github-cpuguy83-go-md2man \
      cronie \
      httpd \
      postgresql-server" && \
    yum -y update-minimal --disablerepo "*" --enablerepo ${REPOLIST} --setopt=tsflags=nodocs \
      --security --sec-severity=Important --sec-severity=Critical && \
    yum -y install --disablerepo "*" --enablerepo ${REPOLIST} --setopt=tsflags=nodocs ${INSTALL_PKGS} && \
### help file markdown to man conversion
    go-md2man -in /tmp/help.md -out /help.1 && \
    yum -y erase golang-github-cpuguy83-go-md2man && \
    yum clean all

### systemd requirements
RUN systemctl enable httpd crond postgresql

### initialize db
ENV LANG en_US.utf8
USER 26
RUN initdb -D /var/lib/pgsql/data
USER 0