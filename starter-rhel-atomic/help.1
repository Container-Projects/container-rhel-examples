.TH "STARTER " "1" " Container Image Pages" "Tommy Hughes" "October 13, 2016"  ""


.SH NAME
.PP
starter \- starter container image


.SH DESCRIPTION
.PP
The starter image provides an example of how a RHEL\-based image build could start.

.PP
The starter image is designed to be run by the atomic command with one of these options:

.PP
\fB\fCrun\fR

.PP
Starts the installed container with selected privileges to the host.

.PP
\fB\fCstop\fR

.PP
Stops the installed container

.PP
\fB\fCuninstall\fR

.PP
Removes the installed container, not the image

.PP
The container itself consists of:
    \- RHEL7 base image
    \- Atomic help file

.PP
Files added to the container during docker build include: /help.1.


.SH USAGE
.PP
To use the starter container, you can run the atomic command with run, stop, or uninstall options:

.PP
To run the starter container:

.PP
atomic run acme/starter

.PP
To stop the starter container (after it is installed), run:

.PP
atomic stop acme/starter

.PP
To remove the starter container (not the image) from your system, run:

.PP
atomic uninstall acme/starter


.SH LABELS
.PP
The starter container includes the following LABEL settings:

.PP
That atomic command runs the docker command set in this label:

.PP
\fB\fCRUN=\fR

.PP
LABEL RUN='docker run \-tdi \-\-name ${NAME} ${IMAGE}'

.PP
The contents of the RUN label tells an \fB\fCatomic run acme/starter\fR command to open ports 8080/8443 \& set the name of the container.

.PP
\fB\fCName=\fR

.PP
The registry location and name of the image. For example, Name="acme/starter".

.PP
\fB\fCVersion=\fR

.PP
The Red Hat Enterprise Linux version from which the container was built. For example, Version="7.2".

.PP
\fB\fCRelease=\fR

.PP
The specific release number of the container. For example, Release="12.1.a":

.PP
When the atomic command runs the starter container, it reads the command line associated with the selected option
from a LABEL set within the Docker container itself. It then runs that command. The following sections detail
each option and associated LABEL:


.SH SECURITY IMPLICATIONS
.PP
\fB\fCTHESE IMPLICATIONS DO NOT APPLY TO THIS IMAGE \- this is only an example of what documentation might look like:\fR

.PP
Below is an example of what is referred to as a super\-privileged container. It is designed to have almost complete
access to the host system as root user. The following docker command options open selected privileges to the host:

.PP
\fB\fC\-d\fR

.PP
Runs continuously as a daemon process in the background

.PP
\fB\fC\-\-privileged\fR

.PP
Turns off security separation, so a process running as root in the container would have the same access to the
host as it would if it were run directly on the host.

.PP
\fB\fC\-\-net=host\fR

.PP
Allows processes run inside the container to directly access host network interfaces

.PP
\fB\fC\-\-pid=host\fR

.PP
Allows processes run inside the container to see and work with all processes in the host process table

.PP
\fB\fC\-\-restart=always\fR

.PP
If the container should fail or otherwise stop, it would be restarted


.SH HISTORY
.PP
Similar to a Changelog of sorts which can be as detailed as the maintainer wishes.


.SH AUTHORS
.PP
Tommy Hughes